{% import '_includes/forms' as forms %}
{% import 'promptly/_macros' as macros %}

{% set config = craft.app.config.getConfigFromFile('promptly') %}

{% set plainTextFields = craft.app.fields.getFieldsByType('craft\\fields\\PlainText') %}
{% set redactorFields = craft.app.fields.getFieldsByType('craft\\redactor\\Field') %}
{% set ckeditorFields = craft.app.fields.getFieldsByType('craft\\ckeditor\\Field') %}

<div class="settings">
    {{ forms.autosuggestField({
        label: 'OpenAI API Key',
        instructions: 'Required [OpenAI API](https://platform.openai.com/account/api-keys) key to access GPT.',
        id: 'openAiKey',
        name: 'openAiKey',
        value: settings.openAiKey,
        required: true,
        errors: settings.getErrors('openAiKey'),
        disabled: config.openAiKey|default('') is not empty,
        warning: macros.configWarning('openAiKey', 'promptly'),
        suggestEnvVars: true
    }) }}

    {{ forms.autosuggestField({
        label: 'Organization ID',
        instructions: 'Optional [Organization ID](https://platform.openai.com/account/org-settings) used for API requests.',
        id: 'organizationId',
        name: 'organizationId',
        value: settings.organizationId,
        errors: settings.getErrors('organizationId'),
        disabled: config.organizationId|default('') is not empty,
        warning: macros.configWarning('organizationId', 'promptly'),
        suggestEnvVars: true
    }) }}

    {{ forms.selectField({
        label: 'GPT Model',
        instructions: '',
        id: 'gptModel',
        name: 'gptModel',
        value: settings.gptModel,
        required: true,
        errors: settings.getErrors('gptModel'),
        disabled: config.gptModel|default('') is not empty,
        warning: macros.configWarning('gptModel', 'promptly'),
        options: [
            { label: 'GPT-3.5', value: 'gpt-3.5-turbo' },
            { label: 'GPT-4', value: 'gpt-4' }
        ]
    }) }}

</div>

<hr>

<div class="settings">
    <h2>Enabled Fields</h2>
    <h3>Core</h3>
    {{ forms.lightswitch({
        id: 'title',
        name: 'enabledFields[]',
        label: 'Title',
        value: 'title',
        on: settings.enabledFields is iterable
            ? 'title' in settings.enabledFields
            : true
    }) }}

    {% if plainTextFields|length %}
        <h3>Plain Text</h3>
        {% for field in plainTextFields %}
            {{ forms.lightswitch({
                id: field.handle,
                name: 'enabledFields[]',
                label: field.name,
                value: field.handle,
                on: settings.enabledFields is iterable
                    ? field.handle in settings.enabledFields
                    : true
            }) }}
        {% endfor %}
    {% endif %}

    {% if redactorFields|length %}
        <h3>Redactor</h3>
        {% for field in redactorFields %}
            {{ forms.lightswitch({
                id: field.handle,
                name: 'enabledFields[]',
                label: field.name,
                value: field.handle,
                on: settings.enabledFields is iterable
                    ? field.handle in settings.enabledFields
                    : true
            }) }}
        {% endfor %}
    {% endif %}

    {% if ckeditorFields|length %}
        <h3>CKEditor</h3>
        {% for field in ckeditorFields %}
            {{ forms.lightswitch({
                id: field.handle,
                name: 'enabledFields[]',
                label: field.name,
                value: field.handle,
                on: settings.enabledFields is iterable
                    ? field.handle in settings.enabledFields
                    : true
            }) }}
        {% endfor %}
    {% endif %}
</div>

<style>
    h3 {
        margin-top: 1.5rem;
        margin-bottom: 0.5rem;
    }

    .lightswitch-inner-container {
        border: none !important;
    }

    .lightswitch-inner-container span {
        cursor: pointer !important;
    }
</style>
